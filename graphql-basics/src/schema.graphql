type Query {
	users: [User!]!
	posts: [Post!]!
	comments: [Comment!]!
	me: User!
	post: Post!
}

type Mutation {
	createUser(userInput: CreateUserInput!): User!
	updateUser(id: ID! userInput: UpdateUserInput!): User!
	deleteUser(user: ID!): User!
	createPost(postInput: CreatePostInput!): Post!
	deletePost(postId: ID!): Post!
	updatePost(id: ID!, postInput: UpdatePostInput!): Post!
	createComment(commentInput: CreateCommentInput!): Comment!
	updateComment(id: ID!, commentInput: UpdateCommentInput!): Comment!
	deleteComment(commentId: ID!): Comment!
}

input CreateUserInput {
	name: String!
	email: String
	age: Int
}

input UpdateUserInput {
	name: String
	email: String
	age: Int
}

input CreatePostInput {
	title: String!
	body: String!
	published: Boolean!
	author: ID!
}

input UpdatePostInput {
	title: String
	body: String
	published: Boolean
}

input CreateCommentInput {
	text: String!
	author: ID!
	post: ID!
}

input UpdateCommentInput {
	text: String
}

type User {
	id: ID!
	name: String!
	email: String!
	age: Int
	posts: [Post!]!
	comments: [Comment!]!
}

type Post {
	id: ID!
	title: String!
	body: String!
	published: Boolean!
	author: User!
	comments: [Comment!]!
}

type Comment {
	id: ID!
	text: String!
	author: User!
	post: Post!
}
